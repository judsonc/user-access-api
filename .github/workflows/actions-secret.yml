# This is a basic workflow to help you get started with Actions

name: CI Actions

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - actions

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  my-job-action:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    container:
      image: node:14-slim
      env:
        FLOW_API_KEY: ${{secrets.FLOW_API_KEY}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Step 1 - Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Step 2 - Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Show how to print unmasked GitHub secrets to the console
      - name: Step 3 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The GitHub Action Secret will be masked: "
          echo ${{ secrets.FLOW_API_KEY }}
          echo "Trick to echo GitHub Actions Secret: "
          echo ${{secrets.FLOW_API_KEY}} | sed 's/./& /g'
          echo "Trick to echo not found GitHub Actions Secret: "
          echo ${{secrets.UNEXIST_API_KEY}}-end

      # Use a GitHub Actions secret variable in a bash shell
      - name: Step 4 - GitHub Action if statement (true)
        env: 
          WHO_TO_TRUST: ${{ secrets.FLOW_API_KEY }}
        if:  env.FLOW_API_KEY == 'Hello'
        run: echo "I know what the secret token is!"

      - name: Run node version
        run: node --version

      - name: Run node and yarn version com echo
        run: echo "node - $(node -v) and yarn - $(npm -v)"

      - name: Install dependencies
        run: yarn

      - name: Run yarn test
        run: yarn test
